<?php
/**
 * app首页类
 * 图案详情类
 * Class Graphicitem_model
 */

class Graphicitem_model extends POP_Model
{
    const T_FASHION_CATEGORY = '`fashion`.`category`';
    const T_FASHION_DICT_ATTRIBUTE = '`fashion`.`t_dict_attribute`';
    const POP_APP_MEMCACHE_PREF = "getSearchClassify_app";
    // 云图的收藏表
    const T_YUNTU_COLLECT = '`yuntu`.`t_collect`';

    //条件简写与Solr字段对应关系 s 代表查询字段 g 代表 Group字段
    public $condSolrArr = [
        "patternContent" => ["name" => "图案内容", "s" => "aLabelIds", "g" => "sPatternContent"],// 图案内容
        "gender" => ["name" => "性别", "s" => "aLabelIds", "g" => "sGender"],// 性别
        "patternTechnology" => ["name" => "图案工艺", "s" => "aPatternTechnology", "g" => "sPatternTechnology"],// 图案工艺
        "format" => ["name" => "图案格式", "s" => "aPatternFormat", "g" => "sPatternFormat"], // 矢量/位图
        "application" => ["name" => "局部/满身", "s" => "aPatternUse", "g" => "sPatternUse"],// 局部/满身
    ];

    // 图案内容对应关系,字典表要维护好
    public $patternImgArr = array(
        11699 => 'icon_dongwu.png', // 动物
        11700 => 'icon_renwu.png', // 人物
        11701 => 'icon_zhiwu.png', // 植物
        11707 => 'icon_huawen.png', // 花纹
        11708 => 'icon_wenzi.png', // 文字
        11709 => 'icon_tuxing.png', // 图形
        11713 => 'icon_yishuxiaoguo.png', // 艺术效果
        // 11714 => 'icon_shenghuoyuansu.png', // 生活元素，排除
        12040 => 'icon_yundonyuansu.png',// 运动
        //12041 => '', // 太空科技
        //12044 =>  '', // 飞禽
        //12045 => '', // 昆虫
        //12046 =>  '', // 海洋
        12047 => 'icon_fengjing.png', // 自然
        //12262 =>  '', // 条纹
        //12295 =>  '',// 素色
    );

    public function __construct()
    {
        parent::__construct();
        $this->refresh = $this->input->get_post("refresh", true);
    }

    /**
     * 获取首页列表
     * product_fabricgallery_item  product_graphicitem
     */
    public function getList(&$list, $paramsArr, $offset, $limit)
    {
        $keyword = getKeyWord();
        $result = [];
        $conditions = $this->getCondition($paramsArr);

        // 排序 -- 1-最新发布(时间倒序) 默认 2-最受欢迎（浏览量） 3-以图搜图匹配度最高
        $sor = isset($paramsArr['newStorgreet']) && !empty($paramsArr['newStorgreet']) ? $paramsArr['newStorgreet'] : 1;
        $arSort = $this->getSort((int)$sor);
        // 查询数据
        $totalCount = POPSearch::wrapQueryPopFashionMerger($keyword, $conditions, $result, $offset, $limit, $arSort);

        foreach ($result as $key => $val) {
            // popId
            $row["popId"] = getProductTableName($val["tablename"]) . "_" . $val["pri_id"];
            $row['t'] = getProductTableName($val["tablename"]);
            $row['id'] = $val["pri_id"];

            $_result = OpPopFashionMerger::getProductData($val["pri_id"], $val["tablename"]);
            $res = $_result[$val["pri_id"]];

            // 列表取中图，没有取大图
            $imgPath = getImagePath($val["tablename"], $res);
            $row["small"] = $row["imgPath"] = $imgPath['smallPath'];
            $row["mbig"] = $this->getPath($imgPath['bigPath']);
            $row["big"] = $imgPath['bigPath'];
            $list[$key] = $row;
        }
        return $totalCount;
    }

    //获取solr查询的排序条件
    public function getSort($sor = 0)
    {
        // 1-最新发布(时间倒序)  默认
        $arSort = [];
        if (!empty($sor) && isset($sor)) {
            // 1=>更新时间(最新发布),2=>浏览量(最受欢迎)
            switch ($sor) {
                case "1":
                    $arSort = ['dCreateTime' => 'DESC', 'pri_id' => 'DESC'];
                    break;
                case '2':
                    $arSort = ['iViewCount' => 'DESC', 'pri_id' => 'DESC'];
                    break;
            }
        }
        return $arSort;
    }

    /**
     * 拼接solr条件
     */
    public function getCondition($paramsArr)
    {
        $conditions = [];
        if (isset($paramsArr['queryTime'])) {
            // 热门数据，取近16天的数据
            $day = intval($paramsArr['queryTime']);
            $endTime = date("Y-m-d") . 'T' . date("H:i:s", strtotime("-2 hour")) . 'Z';
            $conditions['dCreateTime'] = '[' . date('Y-m-d\T00:00:00\Z', strtotime("-{$day} days")) . ' TO ' . $endTime . ']';
        } else {
            $conditions['dCreateTime'] = '[* TO ' . date("Y-m-d\TH:i:s\Z", strtotime("-2 hour")) . ']'; //取两个小时前的数据
        }
        $conditions['iColumnId'] = [82, 120];

        foreach ($paramsArr as $key => $value) {
            if (isset($this->condSolrArr[$key])) {

                $solrField = $this->condSolrArr[$key]["s"];
                if ($solrField == "aLabelIds") {
                    $v = is_array($value) ? implode(" OR ", $value) : $value;
                    $conditions["other"][] = "{$solrField}:($v)";
                } else {
                    $conditions[$solrField] = $value;
                }

            }
        }
        return $conditions;
    }

    /**
     * 获取图案详情
     * @param $table
     * @param $id
     * @param int|string $userId 用户名id
     * product_fabricgallery_item  product_graphicitem
     */
    public function getDetail($table, $id, $userId)
    {
        $_result = OpPopFashionMerger::getProductData($id, $table);
        $result = $_result[$id];
        $imgPath = getImagePath($table, $result);

        // 判断vip权限
        $this->load->model('Account_model');
        $priInfo = $this->Account_model->getUserPowerDate($userId);


        //特别说明 : 原来中图400*auto 由于2019-06-20号起中图切图为 800*auto; 应用逻辑 ：详情加载速率问题 云图app详情，20号之前的取原大图，20号之后取800*auto中图;
        $is_get_mbig = strtotime($result['create_time']) > strtotime('2019-06-20 00:00:00') ? true : false;

        // 获取图片
        if ($imgPath['detailImg']) {
            // 新数据
            foreach ($imgPath['detailImg'] as $key => $_detailpath) {

                $__mbig = $this->getPath($_detailpath['bigPath']);

                $rows["imgUrls"][$key]["mbig"] = $__mbig;
                $rows["imgUrls"][$key]["small"] = $_detailpath['smallPath'];
                $rows["imgUrls"][$key]["big"] = $is_get_mbig ? $__mbig : $_detailpath['bigPath'];
            }
        } else {
            // 老数据
            $__mbig = $this->getPath($imgPath['bigPath']);

            $rows["imgUrls"][0]["small"] = $imgPath['smallPath'];
            $rows["imgUrls"][0]["mbig"] = $__mbig;
            $rows["imgUrls"][0]["big"] = $is_get_mbig ? $__mbig : $imgPath['bigPath'];
        }

        // 描述
        $rows["memo"] = $result['memo'];

        // TODO 收藏状态 0未收藏 1已收藏
        $rows['iFavoriteType'] = $userId ? $this->getCollectStatus($table, $id, $userId) : 0;

        // 时间
        $rows["dCreateTime"] = date("Y-m-d", strtotime($result["create_time"]));

        $colorObj = json_decode($result['sColorDetails']);
        $rows["color"] = !empty($colorObj[0]->Color) ? $colorObj[0]->Color : '';

        return $rows;
    }

    /**
     * 图案库获取列表/详情的用户收藏状态
     *
     * @param string $table 假表名
     * @param $id
     * @param string $sDatabase
     * @return mixed
     */
    public function getCollectStatus($table, $id, $userId, $sDatabase = 'fashion')
    {
        if (!$table || !$id || !$userId) {
            return false;
        }
        $tablename = $table;// 真表名
        $sql = "SELECT id,iStatus FROM " . self::T_YUNTU_COLLECT . "  WHERE sAccountId=? AND sTableName=? AND iPriId=? AND sDatabase=? ORDER BY dCreateTime DESC LIMIT 1";
        $res = $this->query($sql, [$userId, $tablename, $id, $sDatabase]);

        // 返回iStatus状态值
        return $res[0]['iStatus'] == 1 ? 1 : 0;
    }

    /**
     * 获取筛选项
     */
    public function getSearchClassify()
    {
        $this->load->driver('cache');
        $memcacheKey = self::POP_APP_MEMCACHE_PREF;
        $fileds = $this->cache->memcached->get($memcacheKey);
        if (empty($fileds) || $this->refresh == true) {
            // sAPP--局部/满身 sFor--图案格式 sGen--性别 sPat--图案内容 sTec--图案工艺
            $fileds = ["sGen" => [], "sApp" => [], "sFor" => [], "sPat" => [], "sTec" => []];

            // 性别
            $allGender = GetCategory::getGender();
            foreach ($allGender as $id => $name) {
                $fileds['sGen'][] = [
                    'cId' => $id,
                    'cName' => $name,
                ];
            }
            // 局部/满身
            $fileds['sApp'] = $this->getDictAttr(14101, 0, true);
            // 图案格式
            $fileds['sFor'] = $this->getDictAttr(10959, 0, true);
            // 图案内容
            $fileds['sPat'] = $this->getDictAttr(25, 11698);
            // 图案工艺 , 数据中没有该数据，隐藏，2019-05-17
            // $fileds['sTec'] = $this->getDictAttr(18, 11453);

            $this->cache->memcached->save($memcacheKey, $fileds, 3600);
        }

        return $fileds;
    }

    /**
     * 列表展示，中图没有获取大图
     * @param $img
     * @return mixed|string
     */
    public function getPath($img)
    {
        $rows = '';
        if ($img) {
            $string = str_replace('/big/', '/mbig/', $img);
            $mbigPath = parse_url($string, PHP_URL_PATH);
            $sApppath = rtrim(APPPATH, '/');
            $fileUpper = $sApppath . $mbigPath;

            $rows = api_file_exists($fileUpper) ? $string : $img;
        }
        return $rows;
    }

    /**
     * 获取分类筛选--图案内容信息
     * http://yuntu.pop136.com/global/images/app/pattern/icon_dongwu.png
     *
     * @param $iType
     * @param $iAttributePid
     * @return mixed
     */
    public function getPatternContentData($iType = 25, $iAttributePid = 11698)
    {
        $patternImgArr = $this->patternImgArr;

        // 图案内容 `fashion`.`t_dict_attribute`
        $data = $dataArr = array();
        $sql = "SELECT iAttributeId, iType, sName FROM " . self::T_FASHION_DICT_ATTRIBUTE . " WHERE iType=? AND iStatus = 0 AND iAttributePid=?";
        $rows = $this->query($sql, [$iType, $iAttributePid]);
        foreach ($rows as $row) {
            $data[] = array(
                'cId' => $row['iAttributeId'],
                'cName' => $row['sName'],
                'imgPath' => $patternImgArr[$row['iAttributeId']] ? APP_PATTERN_IMAGE_ICON . $patternImgArr[$row['iAttributeId']] : ''
            );
        }
        // 筛选
        foreach ($data as $k => $v) {
            if ($v['imgPath']) {
                $dataArr[] = $v;
            }
        }
        return $dataArr;
    }

    /**
     * @详情--相关推荐（达观）--针对(服装_图案,家纺_图案)获取站点1/5,单个取值
     * @param array $table like: ['product_graphicitem' => 'graphicitem', 'product_fabricgallery_item' => 'fabricgalleryitem']
     * @param string $popId like: graphicitem_401655
     * @return string
     */
    public function getSiteByPopId($table, $popId)
    {
        $site_pop_id = '';
        if (!is_array($table) || empty($popId)) return $site_pop_id;

        $t = substr($popId, 0, strrpos($popId, "_"));
        $id = substr($popId, strripos($popId, "_") + 1);
        $tableArr = array_flip($table);
        $real_table = $tableArr[$t];

        if ($real_table && $id) {
            $table_name = 'fashion.' . $real_table; // 完整表名
            $sql = "SELECT `id`,`channel` FROM {$table_name} WHERE `id`=? LIMIT 1";
            $result = $this->query($sql, array($id));
            if ($result) {
                $channel = $result[0]['channel'];
                if (strpos($channel, 'fashion') !== false) {
                    $site_pop_id = "1_{$real_table}_{$id}"; // 1-服装
                } elseif (strpos($channel, 'jiafang') !== false && strpos($channel, 'fashion') === false) {
                    $site_pop_id = "5_{$real_table}_{$id}"; // 5-家纺
                }
            }
        }
        return $site_pop_id;
    }

    /************************************** 私有方法 *************************************************************/

    // 查询筛选项
    private function getDictAttr($iType, $iAttributePid = 0, $is_category = false)
    {
        $data = [];
        if ($is_category) {
            // 局部/满身  图案格式  `fashion`.`category`
            $sql = "SELECT cat_id,cat_name FROM " . self::T_FASHION_CATEGORY . " WHERE parent_id =? AND is_show=1 ORDER BY orderby DESC";
            $rows = $this->query($sql, [$iType]);
            foreach ($rows as $row) {
                $data[] = array(
                    'cId' => $row['cat_id'],
                    'cName' => $row['cat_name'],
                );
            }
        } else {
            // 图案内容  图案工艺  `fashion`.`t_dict_attribute`
            $sql = "SELECT iAttributeId, iType, sName FROM " . self::T_FASHION_DICT_ATTRIBUTE . " WHERE iType=? AND iStatus = 0 AND iAttributePid=?";
            $rows = $this->query($sql, [$iType, $iAttributePid]);
            foreach ($rows as $row) {
                if ($row['iAttributeId'] != 11714) { // 排除11714--生活元素
                    $data[] = array(
                        'cId' => $row['iAttributeId'],
                        'cName' => $row['sName'],
                    );
                }
            }
        }
        return $data;
    }

}