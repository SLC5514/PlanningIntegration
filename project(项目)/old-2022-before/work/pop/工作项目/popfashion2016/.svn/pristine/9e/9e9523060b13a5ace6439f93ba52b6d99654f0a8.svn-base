<?php

/**
 * Author: jiangwei
 * DateTime: 2019/6/24 10:53
 * 广告model
 */
class Ad_model extends POP_Model
{
    private $topAdMemPre = "fashion_ad_model_column_top_";
    private $columns = [
        "pattern" => [82, 120, 124],
        "style" => [4, 50, 51, 52, 53, 54, 55, 56, 57, 122, 123],
        "report" => [1, 2, 20, 21, 125, 126, 127, 128, 129, 30, 31, 32, 33, 34, 35, 38, 132],
        "runways" => [3],//T台
        "book" => [70, 71, 72, 115, 131]
    ];

    function __construct()
    {
        $this->load->model("common_model");
    }

    //获取栏目顶部广告
    public function getColumnTopAd($column, $params)
    {
        if ($column == "iSpecialTopicPatterns") {
            $column = 126;
        }
        $gender = $this->common_model->getGenderByRequest($params);
        $industry = $this->common_model->getIndustryByRequest($params);
        $conditions = $sql_con = array();
        // 性别
        $title_pre = "";
        if ($gender && $column != 124) {
            $this->common_model->childGender($gender, $conditions);
            $sql_con["gender"] = $gender;
            $title_pre .= GetCategory::getAttrNameById($gender);
        }
        // 行业
        if ($industry && !in_array($column, [3, 82, 120, 124])) {
            $conditions['other'][] = 'aLabelIds:' . $industry;
            $sql_con["industry"] = $industry;
            $title_pre .= GetCategory::getAttrNameById($industry);
        }
        if (in_array($column, $this->columns["pattern"])) {
            $data = $this->getPatternAd($column, $conditions);
        } elseif (in_array($column, $this->columns["style"])) {
            $data = $this->getStyleAd($column, $conditions, $title_pre);
        } elseif (in_array($column, $this->columns["report"])) {
            $paramsArr = $this->common_model->parseParams($params, 1);
            $stp = ($column == 126 && isset($paramsArr["stp"])) ? intval($paramsArr["stp"]) : 0;
            $sql_con["stp"] = $stp;
            $data = $this->getAdRecommendationTop($column, $sql_con, "view_down_rate");
        } elseif (in_array($column, $this->columns["runways"])) {
            $paramsArr = $this->common_model->parseParams($params, 1);
            if ($paramsArr['typ'] == 'tshowpic') {
                $sql_con["typ"] = $paramsArr['typ'];
            }
            if (in_array($paramsArr['reg'], [272, 341, 335, 323, "other"])) {
                $sql_con["reg"] = $paramsArr['reg'];
            }
            $data = $this->getAdRecommendationTop($column, $sql_con, "view_count");
        } elseif (in_array($column, $this->columns["book"])) {
            $data = $this->getAdRecommendationTop($column, $sql_con, "view_count");
        } else {
            $data = array();
        }
        if (!is_array($data)) {
            $data = array();
        }
        //合并手动广告
        $manuaData = $this->getColTopManualAd($column, $gender, $industry);
        if (!empty($manuaData) && is_array($manuaData)) {
            $result = array_merge($manuaData, $data);
        } else {
            $result = $data;
        }
        $result = array_slice($result, 0, 15);
        return $result;
    }
    //------------------------------------------------------------------------------------------------------------------
    //  自动推荐广告--浏览量、下载率部分
    //------------------------------------------------------------------------------------------------------------------
    private function getAdRecommendationTop($column, Array $sql_con, $order_field = "view_count")
    {
        $sql_con = array_filter($sql_con);
        ksort($sql_con);
        $memcachekey = $this->topAdMemPre . $column . json_encode($sql_con);
        $result = $this->cache->memcached->get($memcachekey);
        if ($result === false || $_GET["refresh"] == 1) {
            $result = array();
            $where = "";
            if (!empty($sql_con["gender"])) {
                $where .= ' AND FIND_IN_SET(' . $sql_con["gender"] . ',gender)';
            }
            if (!empty($sql_con["industry"])) {
                $where .= ' AND FIND_IN_SET(' . $sql_con["industry"] . ',industry)';
            }
            if ($column == 126 && $sql_con["is_topic_patterns"]) {
                $where .= " AND is_topic_patterns='{$sql_con["is_topic_patterns"]}'";
            }
            if ($column == 3 && $sql_con["typ"]) {
                $where .= " AND class='{$sql_con["typ"]}'";
            }
            if ($column == 3 && $sql_con["reg"]) {
                if ($sql_con["reg"] == "other") {
                    $where .= " AND region NOT IN(272, 341, 335, 323)";
                } else {
                    $where .= " AND region='{$sql_con["reg"]}'";
                }
            }
            $sql = "SELECT * FROM t_column_auto_ad WHERE (`column`='$column' OR `sub_column`='$column') $where ORDER BY {$order_field} DESC LIMIT 15";
            $list = $this->query($sql);
            foreach ($list as $key => $row) {
                $res = OpPopFashionMerger::getProductData($row["pri_id"], $row["table_name"]);
                if (empty($res)) {
                    continue;
                }
                if ($column == 3) {
                    $img_path = $this->getRunwaysImage($res[$row["pri_id"]]);
                } else {
                    $img_path = getImagePath($row["table_name"], $res[$row["pri_id"]]);
                }
                $link = "";
                $t = getProductTableName($row["table_name"]);
                if (in_array($column, $this->columns["report"])) {
                    $link = "/details/report/t_{$t}-id_{$row['pri_id']}-col_{$row['sub_column']}/";
                } elseif (in_array($column, $this->columns["runways"])) {
                    $link = "/runways/inside/id_{$row['pri_id']}/";
                } elseif (in_array($column, $this->columns["book"])) {
                    $link = "/books/seclist/id_{$row['pri_id']}-t_{$t}-yl_2-col_{$row['sub_column']}/";
                }
                $cover = $img_path["cover"];
                $_array = [
                    'sTitle' => $this->getTitle($row["table_name"], $res[$row["pri_id"]]),
                    'sMemo' => '',
                    'sImagePath' => $cover,
                    'sLink' => $link,
                    'sNewWindow' => '1',
                    'cover_image_tag' => (int)$res[$row["pri_id"]]['cover_image_tag'],
                    $order_field => $row[$order_field],
                ];
                if ($column) {
                    $_array['cover_image_tag'] = (int)$res[$row["pri_id"]]['cover_image_tag'];
                }
                $result[] = $_array;
            }
            $this->cache->memcached->save($memcachekey, $result, 172800);
        }
        return $result;
    }

    private function getTitle($table, $data)
    {
        $title = htmlspecialchars(stripcslashes($data['title']));
        switch ($table) {
            case 'product_presscon':
                $title = $data["nme"];
                break;
            case 'specialtopic':
            case 'specialtopic_graphic':
            case 'mostrend_content':
            case 'fs_analysis':
            case 'fs_commodity':
            case 'fs_design':
            case 'fs_inspiration':
            case 'fs_trend':
                $title = htmlspecialchars(stripcslashes($data['title']));
                break;
            case 't_trend_report':
                $title = $data['sTitle'];
                break;
            case 'product_brochures':
            case 'product_design_refrence':
                $title = $data['name_text'];
                break;
        }
        return $title;
    }

    private function getRunwaysImage($data)
    {
        $sCoverImg = json_decode($data['sCoverImg']);
        $result = array();
        if ($data['cover_image_tag'] == 1) {
            $result['cover'] = STATIC_URL2 . $sCoverImg[0];
        } else {
            //细节版图片
            if ($data['special_flag'] == 1) {
                $versionId = 3;
            }
            //现场及时版
            if ($data['detail_flag'] == 1) {
                $versionId = 1;
            }
            //默认高清版图片
            if ($data['focus_flag'] == 1) {
                $versionId = 2;
            }
            $where = "";
            if (!empty($versionId)) {
                $where .= 'AND main_flag = ' . $versionId;
            }
            $sql = "SELECT * FROM product_presscon_details WHERE main_id='{$data["id"]}' {$where} LIMIT 1";
            $row = $this->query($sql);
            $result = getImagePath('product_presscon_details', $row[0]);
        }

        return $result;
    }
    //------------------------------------------------------------------------------------------------------------------
    //  自动推荐广告--更新量部分
    //------------------------------------------------------------------------------------------------------------------
    /*
     * 广告规则：款式--获取一个月内，品名更新最多的数据(15个)
     */
    private function getStyleAd($column, $conditions, $title_pre)
    {
        ksort($conditions);
        $memcachekey = $this->topAdMemPre . $column . json_encode($conditions);
        $result = $this->cache->memcached->get($memcachekey);
        if ($result === false || $_GET["refresh"] == 1) {
            $conditions["iColumnId"] = $column;
            $group_field = 'sSubCategory';
            $time_from = "-1 month";
            $list = $this->getRangeUpdateMost($group_field, $time_from, $conditions);
            $result = [];
            foreach ($list as $key => $row) {
                $res = OpPopFashionMerger::getProductData($row["data"]["pri_id"], $row["data"]["tablename"]);
                if (empty($res)) {
                    continue;
                }
                $img_path = getImagePath($row["data"]["tablename"], $res[$row["data"]["pri_id"]]);
                $result[] = [
                    'sTitle' => $title_pre . GetCategory::getAttrNameById($row["val"]),
                    'sMemo' => '',
                    'sImagePath' => $img_path["cover"],
                    'sLink' => $this->common_model->getLink($column, "dis_1", 'cat', $row["val"], true, 'anchor'),
                    'sNewWindow' => '0',
                    'updateCount' => $row["count"],
                    'pop_id' => "{$row["data"]["tablename"]}_{$row["data"]["pri_id"]}",
                ];
            }
            $this->cache->memcached->save($memcachekey, $result, 172800);
        }

        return $result;
    }

    /*
     * 广告规则：
     *  1、图案素材--获取半年内，二级图案内容更新最多的数据(15个)
     *  2、大牌花型--获取半个月内，一级图案内容更新最多的数据(5个)
     *  3、图案工艺--获取半年内，图案工艺更新最多的数据（15个）
     */
    private function getPatternAd($column, $conditions)
    {
        $conditions = array_filter($conditions);
        ksort($conditions);
        $memcachekey = $this->topAdMemPre . $column . json_encode($conditions);
        $result = $this->cache->memcached->get($memcachekey);
        if ($result === false || $_GET["refresh"] == 1) {
            $filterIds = $result = array();
            $time_froms = [
                82 => "-6 month",
                120 => "-15 days",
                124 => "-6 month",
            ];
            if ($column == 124) {
                $group_field = 'sPatternTechnology';
            } else {
                $group_field = 'sPatternContent';
            }
            $time_from = $time_froms[$column];
            $conditions["iColumnId"] = $column;
            if ($column == 82) {
                $conditions['aWebsite'] = 1;
            }
            $list = $this->getRangeUpdateMost($group_field, $time_from, $conditions);
            switch ($column) {
                case "82":
                    $secondFloorPatterns = $this->getPatterns(false);
                    $filterIds = array_column($secondFloorPatterns, "iAttributeId");
                    break;
                case "120":
                    $firstFloorPatterns = $this->getPatterns(true);
                    $filterIds = array_column($firstFloorPatterns, "iAttributeId");
                    break;
            }
            foreach ($list as $key => $row) {
                if (!empty($filterIds) && !in_array($row["val"], $filterIds)) {
                    unset($list[$key]);
                    continue;
                }
                $res = OpPopFashionMerger::getProductData($row["data"]["pri_id"], $row["data"]["tablename"]);
                if (empty($res)) {
                    continue;
                }
                $img_path = getImagePath($row["data"]["tablename"], $res[$row["data"]["pri_id"]]);

                $str = $column == 124 ? 'tec' : 'con';
                $result[] = [
                    'sTitle' => GetCategory::getAttrNameById($row["val"]),
                    'sMemo' => '',
                    'sImagePath' => $img_path["cover"],
                    'sLink' => $this->common_model->getLink($column, array(), $str, $row["val"], true, 'anchor'),
                    'sNewWindow' => '0',
                    'updateCount' => $row["count"],
                ];
            }
            $this->cache->memcached->save($memcachekey, $result, 172800);
        }
        return $result;
    }

    //获取所有图案内容
    private function getPatterns($first_floor = true)
    {
        if ($first_floor) {
            $sql = 'SELECT iAttributeId,sName FROM `t_dict_attribute` WHERE iType=25 AND iDisplay=1 AND iAttributePid=11698';
        } else {
            $sql = 'SELECT iAttributeId,sName FROM `t_dict_attribute` WHERE iType=25 AND iDisplay=1 AND iAttributeId!=11698 AND iAttributePid!=11698';
        }
        $rows = $this->query($sql);
        return $rows;
    }

    /*
     * 自动推荐规则
     * 某个栏目，某个时间段内，某个标签更新量最多的，取第一个图
     */
    private function getRangeUpdateMost($group_field, $time_from, $condition = array())
    {
        $params["fl"] = "pop_id,pri_id,tablename,iColumnId,dCreateTime";
        $params['group'] = 'true';
        $params['group.ngroups'] = 'true';
        $params['group.field'] = $group_field;
        $arSort = array('dCreateTime' => 'DESC', 'pri_id' => 'DESC');//排序
        $endTime = date("Y-m-d") . 'T' . date("H:i:s", strtotime("-2 hour")) . 'Z';
        $condition["dCreateTime"] = '[' . date('Y-m-d\TH:i:s\Z', strtotime($time_from)) . ' TO ' . $endTime . ']';
        POPSearch::wrapQueryPopFashionMerger('', $condition, $rows, 0, 200, $arSort, $params);
        if ($rows[$group_field]["ngroups"] <= 0 || empty($rows[$group_field]["groups"])) {
            return array();
        }
        $list = array();
        foreach ($rows[$group_field]["groups"] as $row) {
            $groupValues = explode(",", $row["groupValue"]);
            $groupValues = array_filter($groupValues);
            if (empty($groupValues)) {
                continue;
            }
            foreach ($groupValues as $groupValue) {
                $data = array();
                if (!empty($list[$groupValue])) {
                    $count = $list[$groupValue]["count"] + $row["doclist"]["numFound"];
                    if (strtotime($list[$groupValue]["data"]["dCreateTime"]) < strtotime($row["doclist"]["docs"]["dCreateTime"])) {
                        $data = $row["doclist"]["docs"][0];
                    } else {
                        $data = $list[$groupValue]["data"];
                    }
                } else {
                    $count = $row["doclist"]["numFound"];
                    $data = $row["doclist"]["docs"][0];
                }

                $list[$groupValue] = [
                    "val" => $groupValue,
                    "count" => $count,
                    "data" => $data
                ];
            }
        }
        $list = twoDimensionSort($list, 'count');
        return $list;
    }

    //------------------------------------------------------------------------------------------------------------------
    //  手动更新广告部分，默认继承主栏目id
    //------------------------------------------------------------------------------------------------------------------
    private function getColTopManualAd($column, $gen, $ind)
    {
        $memcachekey = $this->topAdMemPre . "manual_23_" . $column;
        $rows = $this->cache->memcached->get($memcachekey);
        if ($rows === false || $_GET["refresh"] == 1) {
            $colPid = GetCategory::getOtherFromColId($column);
            $colPid = $colPid == 8 ? 7 : $colPid;
            $time = date("Y-m-d H:i:s");
            if ($colPid == 0 || $colPid == $column) {
                $sql = 'SELECT * FROM `fashion`.`fm_ad` WHERE iPosition=23 AND iStatus=1 AND iColumnId=? AND dStartTime<=? AND dEndTime>=?  ORDER BY dCreateTime DESC  LIMIT 15';
                $rows = $this->query($sql, [$column, $time, $time]);
            } else {
                $sql = 'SELECT * FROM `fashion`.`fm_ad` WHERE iPosition=23 AND iStatus=1 AND (iColumnId=? OR iColumnId=?) AND dStartTime<=? AND dEndTime>=?  ORDER BY dCreateTime DESC LIMIT 15';
                $rows = $this->query($sql, [$column, $colPid, $time, $time]);
            }
            $this->cache->memcached->save($memcachekey, $rows, 7200);
        }
        $result = array();
        if (!empty($rows) && is_array($rows)) {
            $power = memberPower('other');
            // 用户类型 与 广告的对应关系
            $user_type_arr = [
                1 => 1,//vip
                2 => 1,
                3 => 2,//试用
                4 => 3,//普通
                5 => 4,//游客
            ];
            $user_type = $user_type_arr[$power['P_UserType']];
            foreach ($rows as $row) {
                $iUserType = explode(",", $row["iUserType"]);
                $sGender = explode(",", $row["sGender"]);
                if (!in_array($user_type, $iUserType)) {
                    continue;
                }
                if (!empty($gen) && !in_array($gen, $sGender)) {
                    continue;
                }
                if (!empty($ind) && !in_array($ind, $sGender)) {
                    continue;
                }
                $link = "/statistics/link/?url=" . base64_encode($row["iAdId"]) . "_" . base64_encode($row["sUrl"]);
                $sLink = ($row["sUrl"] == "javascript:void(0)" || empty($row["sUrl"])) ? "javascript:void(0);" : $link;
                $result[] = [
                    'sTitle' => $row["sTitle"],
                    'sMemo' => $row["sMemo"],
                    'sImagePath' => STATIC_URL1 . $row["sImagePath"],
                    'sLink' => $sLink,
                    'sNewWindow' => $row["sNewWindow"],
                    'manual' => 1
                ];
            }
            $result = array_values($result);
        }
        return $result;
    }
}